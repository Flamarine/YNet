buildscript {
	repositories {
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
		gradlePluginPortal()
	}
}

plugins {
	id 'java'
	id 'fabric-loom' version "0.4.29"
	id 'org.jetbrains.kotlin.jvm' version "1.4.0"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		jvmTarget = '1.8'
	}
}


archivesBaseName = "${project.mod_name}-${project.mod_version}+${project.minecraft_version}"

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:$project.fabric_language_kotlin"

	modApi ("alexiil.mc.lib:libblockattributes-fatjar_devonly:0.7.0") {
		transitive = false
	}
	modApi ("teamreborn:energy:${project.tr_energy_version}")
	modImplementation ("com.github.vini2003:blade:${project.blade_version}")

	include "alexiil.mc.lib:libblockattributes-all:0.7.0"
	include "com.github.vini2003:blade:${project.blade_version}"

	modRuntime "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modRuntime "net.fabricmc:fabric-language-kotlin:$project.fabric_language_kotlin"
}

repositories {
	mavenCentral()
	jcenter()
	maven {
		name = "TechReborn"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "Blade"
		url  "https://dl.bintray.com/blade/Blade"
	}
	maven {
		name = "BuildCraft"
		url = "https://mod-buildcraft.com/maven"
	}
	maven {
		name = "Jitpack"
		url  "https://jitpack.io/"
	}
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

jar {
	from "LICENSE"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar.dependsOn sourcesJar
build.dependsOn jar
